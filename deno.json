{
  "exclude": [
    "dist/"
  ],
  "imports": {
    "@noble/curves": "npm:@noble/curves@^1.3.0",
    "@noble/hashes": "npm:@noble/hashes@^1.3.3",
    "@lophus/core/clients": "./core/clients.ts",
    "@lophus/core/protocol": "./core/protocol.ts",
    "@lophus/core/relays": "./core/relays.ts",
    "@lophus/lib/types": "./lib/types.ts",
    "@lophus/lib/testing": "./lib/testing.ts",
    "@lophus/lib/streams": "./lib/streams.ts",
    "@lophus/std/env": "./std/env.ts",
    "@lophus/std/events": "./std/events.ts",
    "@lophus/std/notes": "./std/notes.ts",
    "@lophus/std/pools": "./std/pools.ts",
    "@lophus/std/signs": "./std/signs.ts",
    "@lophus/std/times": "./std/times.ts",
    "@std/assert": "jsr:@std/assert@^0.219.1",
    "@std/dotenv": "jsr:@std/dotenv@^0.219.1",
    "@std/streams": "jsr:@std/streams@^0.219.1",
    "@std/testing": "jsr:@std/testing@^0.219.1"
  },
  "tasks": {
    "build": "mkdir -p ./dist && deno run -A ./bin/bundle.ts",
    "cache": "deno cache ./**/*.ts --lock",
    "check": "deno check ./**/*.ts",
    "lock": "deno task cache --lock-write && git add deno.lock",
    "pre-commit": "deno fmt && deno lint && deno task -q check && deno task -q lock && deno task -q test",
    "test": "deno test -A --no-check",
    "update": "deno run --allow-read --allow-env --allow-write --allow-net=registry.npmjs.org,jsr.io --allow-run=deno,git https://deno.land/x/molt@0.17.1/cli.ts deno.json --unstable-lock",
    "update:commit": "deno task -q update --commit --prefix 'build(deps):' --prefix-lock 'build(lock):'"
  },
  "workspaces": [
    "./core",
    "./lib",
    "./std"
  ]
}
